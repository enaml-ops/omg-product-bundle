# example to demonstrate how we would load up the vault with data

#set where your vault lives
VAULT_ADDR=http://192.168.0.1:8200

#set which hash your writing to
VAULT_HASH=secret/pcf-np-1-keycert

# get the certgen util
go get github.com/enaml-ops/omg-cli/plugins/products/cloudfoundry/cmd/certgen

#generate all the key/certs we need
certgen --host google.com --prefix router
certgen --host google.com --prefix consul-ca --ca
certgen --host google.com --prefix consul-agent
certgen --host google.com --prefix consul-server
certgen --host google.com --prefix etcd-server
certgen --host google.com --prefix etcd-client
certgen --host google.com --prefix etcd-peer
certgen --host google.com --prefix bbs-ca --ca
certgen --host google.com --prefix bbs-server
certgen --host google.com --prefix bbs-client

#load the generated key/certs into vault
../vault write ${VAULT_HASH} \
router-ssl-cert=@router-cert.pem \
router-ssl-key=@router-key.pem \
consul-agent-cert=@consul-agent-cert.pem \
consul-agent-key=@consul-agent-key.pem \
consul-server-cert=@consul-server-cert.pem \
consul-server-key=@consul-server-key.pem \
bbs-server-cert=@bbs-server-cert.pem \
bbs-server-key=@bbs-server-key.pem \
etcd-server-key=@etcd-server-key.pem \
etcd-server-cert=@etcd-server-cert.pem \
etcd-client-key=@etcd-client-key.pem \
etcd-client-cert=@etcd-client-cert.pem \
etcd-peer-key=@etcd-peer-key.pem \
etcd-peer-cert=@etcd-peer-cert.pem \
bbs-server-ca-cert=@bbs-ca-cert.pem \
bbs-client-cert=@bbs-client-cert.pem \
bbs-client-key=@bbs-client-key.pem

#lets see what we got
./vault read ${VAULT_HASH}

#cleanup local files
# rm *.pem
