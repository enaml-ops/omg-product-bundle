package uaa 
/*
* File Generated by enaml generator
* !!! Please do not edit this file !!!
*/
type Ldap struct {

	/*Referral - Descr: Configures the UAA LDAP referral behavior. The following values are possible:
- follow -> Referrals are followed
- ignore -> Referrals are ignored and the partial result is returned
- throw  -> An error is thrown and the authentication is aborted
Reference: http://docs.oracle.com/javase/jndi/tutorial/ldap/referral/jndi.html
 Default: follow
*/
	Referral interface{} `yaml:"referral,omitempty"`

	/*SearchBase - Descr: Used with search-and-bind and search-and-compare. Define a base where the search starts at. Default: 
*/
	SearchBase interface{} `yaml:"searchBase,omitempty"`

	/*Ssl - Descr: Set to true, and LDAPS connection will not validate the server certificate. Default: false
*/
	Ssl *LdapSsl `yaml:"ssl,omitempty"`

	/*SslCertificateAlias - Descr: Used with ldaps:// URLs. The certificate alias, to be trusted by this connection and stored in the keystore. Default: <nil>
*/
	SslCertificateAlias interface{} `yaml:"sslCertificateAlias,omitempty"`

	/*Groups - Descr: Used with groups-as-scopes, defines the attribute that holds the scope name(s). Default: spring.security.ldap.dn
*/
	Groups *LdapGroups `yaml:"groups,omitempty"`

	/*SslCertificate - Descr: Used with ldaps:// URLs. The certificate, if self signed, to be trusted by this connection. Default: <nil>
*/
	SslCertificate interface{} `yaml:"sslCertificate,omitempty"`

	/*Enabled - Descr: Set to true to enable LDAP Default: false
*/
	Enabled interface{} `yaml:"enabled,omitempty"`

	/*UserDN - Descr: Used with search-and-bind and search-and-compare. A valid LDAP ID that has read permissions to perform a search of the LDAP tree for user information.  Default: <nil>
*/
	UserDN interface{} `yaml:"userDN,omitempty"`

	/*LocalPasswordCompare - Descr: Used with search-and-compare only. Set to true if passwords are retrieved by the search, and should be compared in the login server. Default: true
*/
	LocalPasswordCompare interface{} `yaml:"localPasswordCompare,omitempty"`

	/*UserDNPatternDelimiter - Descr: The delimiter character in between user DN patterns for simple-bind authentication Default: ;
*/
	UserDNPatternDelimiter interface{} `yaml:"userDNPatternDelimiter,omitempty"`

	/*MailSubstitute - Descr: Defines an email pattern containing a {0} to generate an email address for an LDAP user during authentication Default: 
*/
	MailSubstitute interface{} `yaml:"mailSubstitute,omitempty"`

	/*MailSubstituteOverridesLdap - Descr: Set to true if you wish to override an LDAP user email address with a generated one Default: false
*/
	MailSubstituteOverridesLdap interface{} `yaml:"mailSubstituteOverridesLdap,omitempty"`

	/*UserPassword - Descr: Used with search-and-bind and search-and-compare. Password for the LDAP ID that performs a search of the LDAP tree for user information. Default: <nil>
*/
	UserPassword interface{} `yaml:"userPassword,omitempty"`

	/*UserDNPattern - Descr: Used with simple-bind only. A semi-colon separated lists of DN patterns to construct a DN direct from the user ID without performing a search. Default: <nil>
*/
	UserDNPattern interface{} `yaml:"userDNPattern,omitempty"`

	/*PasswordAttributeName - Descr: Used with search-and-compare only. The name of the password attribute in the LDAP directory Default: userPassword
*/
	PasswordAttributeName interface{} `yaml:"passwordAttributeName,omitempty"`

	/*PasswordEncoder - Descr: Used with search-and-compare only. The encoder used to properly encode user password to match the one in the LDAP directory. Default: org.cloudfoundry.identity.uaa.ldap.DynamicPasswordComparator
*/
	PasswordEncoder interface{} `yaml:"passwordEncoder,omitempty"`

	/*AddShadowUserOnLogin - Descr: If set to false, only users pre-populated in the UAA user database will be allowed to authenticate via LDAP. If set to true, any user from LDAP will be allowed to authenticate and an internal user will be created if one does not yet exist. Default: true
*/
	AddShadowUserOnLogin interface{} `yaml:"add_shadow_user_on_login,omitempty"`

	/*AttributeMappings - Descr: Specifies how UAA user attributes map to LDAP attributes. given_name, family_name, and phone_number are UAA user attributes, while other attributes should be included using the prefix `user.attribute` Default: <nil>
*/
	AttributeMappings interface{} `yaml:"attributeMappings,omitempty"`

	/*EmailDomain - Descr: Sets the whitelist of emails domains that the LDAP identity provider handles Default: <nil>
*/
	EmailDomain interface{} `yaml:"emailDomain,omitempty"`

	/*ProfileType - Descr: The file to be used for configuring the LDAP authentication. Options are: 'simple-bind', 'search-and-bind', 'search-and-compare' Default: search-and-bind
*/
	ProfileType interface{} `yaml:"profile_type,omitempty"`

	/*MailAttributeName - Descr: The name of the LDAP attribute that contains the users email address Default: mail
*/
	MailAttributeName interface{} `yaml:"mailAttributeName,omitempty"`

	/*ExternalGroupsWhitelist - Descr: Whitelist of external groups from LDAP that get added as roles in the ID Token Default: <nil>
*/
	ExternalGroupsWhitelist interface{} `yaml:"externalGroupsWhitelist,omitempty"`

	/*Url - Descr: The URL to the ldap server, must start with ldap:// or ldaps://. Allows multiple servers to be specified, space separated Default: <nil>
*/
	Url interface{} `yaml:"url,omitempty"`

	/*SearchFilter - Descr: Used with search-and-bind and search-and-compare. Search filter used. Takes one parameter, user ID defined as {0} Default: cn={0}
*/
	SearchFilter interface{} `yaml:"searchFilter,omitempty"`

}