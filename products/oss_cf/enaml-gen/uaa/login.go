package uaa 
/*
* File Generated by enaml generator
* !!! Please do not edit this file !!!
*/
type Login struct {

	/*Logout - Descr: When set to false, this allows an operator to leverage an open redirect on the UAA (/logout.do?redirect=google.com). No open redirect enabled Default: true
*/
	Logout *Logout `yaml:"logout,omitempty"`

	/*Prompt - Descr: The text used to prompt for a username during login Default: Email
*/
	Prompt *Prompt `yaml:"prompt,omitempty"`

	/*Notifications - Descr: The url for the notifications service (configure to use Notifications Service instead of SMTP server) Default: <nil>
*/
	Notifications *Notifications `yaml:"notifications,omitempty"`

	/*Analytics - Descr: Google analytics code. If Google Analytics is desired set both login.analytics.code and login.analytics.domain Default: <nil>
*/
	Analytics *Analytics `yaml:"analytics,omitempty"`

	/*Url - Descr: Set if you have an external login server.
The UAA uses this link on by its email service to create links
The UAA uses this as a base domain for internal hostnames so that subdomain can be detected
This defaults to the uaa.url property, and if not set, to login.<domain>
 Default: <nil>
*/
	Url interface{} `yaml:"url,omitempty"`

	/*Branding - Descr: These links appear on the footer of all UAA pages. You may choose to add multiple urls for things like Support, Terms of Service etc. Default: <nil>
*/
	Branding *Branding `yaml:"branding,omitempty"`

	/*Links - Descr: A hash of home/passwd/signup URLS (see commented examples below) Default: <nil>
*/
	Links interface{} `yaml:"links,omitempty"`

	/*Smtp - Descr: SMTP server username Default: <nil>
*/
	Smtp *Smtp `yaml:"smtp,omitempty"`

	/*Protocol - Descr: Scheme to use for HTTP communication (http/https) Default: https
*/
	Protocol interface{} `yaml:"protocol,omitempty"`

	/*IdpDiscoveryEnabled - Descr: IDP Discovery should be set to true if you have configured more than one identity provider for UAA. The discovery relies on email domain being set for each additional provider Default: false
*/
	IdpDiscoveryEnabled interface{} `yaml:"idpDiscoveryEnabled,omitempty"`

	/*AssetBaseUrl - Descr: Deprecated in favor of branding properties. Base url for static assets, allows custom styling of the login server.  Use '/resources/pivotal' for Pivotal style. Default: /resources/oss
*/
	AssetBaseUrl interface{} `yaml:"asset_base_url,omitempty"`

	/*SelfServiceLinksEnabled - Descr: Enable self-service account creation and password resets links. Default: <nil>
*/
	SelfServiceLinksEnabled interface{} `yaml:"self_service_links_enabled,omitempty"`

	/*Messages - Descr: A nested or flat hash of messages that the login server uses to display UI message
This will be flattened into a java.util.Properties file. The example below will lead
to four properties, where the key is the concatenated value delimited by dot, for example scope.tokens.read=message
 Default: <nil>
*/
	Messages interface{} `yaml:"messages,omitempty"`

	/*HomeRedirect - Descr: URL for configuring a custom home page Default: <nil>
*/
	HomeRedirect interface{} `yaml:"home_redirect,omitempty"`

	/*Saml - Descr: Read timeout in milliseconds for SAML metadata HTTP requests Default: 10000
*/
	Saml *Saml `yaml:"saml,omitempty"`

	/*Oauth - Descr: Contains a hash of OpenID Connect/Oauth Identity Providers, the key will be used as the origin key for that provider, followed by key/value pairs. Presence of the userInfoUrl will mark it as an OpenID provider instead of OAuth. Default: <nil>
*/
	Oauth *Oauth `yaml:"oauth,omitempty"`

}