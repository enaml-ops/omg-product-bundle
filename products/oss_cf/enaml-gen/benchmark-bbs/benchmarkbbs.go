package benchmark_bbs 
/*
* File Generated by enaml generator
* !!! Please do not edit this file !!!
*/
type BenchmarkBbs struct {

	/*NumTrials - Descr: the number of trials of each benchmark to average across Default: <nil>
*/
	NumTrials interface{} `yaml:"num_trials,omitempty"`

	/*AwsRegion - Descr: the aws region where the S3 bucket lives Default: 
*/
	AwsRegion interface{} `yaml:"aws_region,omitempty"`

	/*EncryptionKeys - Descr: the key(s) to use for encryption at rest Default: []
*/
	EncryptionKeys interface{} `yaml:"encryption_keys,omitempty"`

	/*AwsBucketName - Descr: the S3 bucket to upload metrics to Default: 
*/
	AwsBucketName interface{} `yaml:"aws_bucket_name,omitempty"`

	/*Etcd - Descr: capacity of the etcd client tls client cache Default: <nil>
*/
	Etcd *BenchmarkBbsEtcd `yaml:"etcd,omitempty"`

	/*Bbs - Descr: PEM-encoded client key Default: <nil>
*/
	Bbs *Bbs `yaml:"bbs,omitempty"`

	/*PercentWrites - Descr: percentage of actual LRPs to write on each rep bulk loop Default: 5
*/
	PercentWrites interface{} `yaml:"percent_writes,omitempty"`

	/*AwsSecretAccessKey - Descr: the aws secret key for uploading metrics to s3 Default: 
*/
	AwsSecretAccessKey interface{} `yaml:"aws_secret_access_key,omitempty"`

	/*NumPopulateWorkers - Descr: the number of workers generating desired LRPs during setup Default: <nil>
*/
	NumPopulateWorkers interface{} `yaml:"num_populate_workers,omitempty"`

	/*AwsAccessKeyId - Descr: the aws access key for uploading metrics to s3 Default: 
*/
	AwsAccessKeyId interface{} `yaml:"aws_access_key_id,omitempty"`

	/*DesiredLrps - Descr: the number of single instance desired lrps to generate and fetch Default: <nil>
*/
	DesiredLrps interface{} `yaml:"desired_lrps,omitempty"`

	/*DatadogApiKey - Descr: the api key for emmitting datadog metrics Default: 
*/
	DatadogApiKey interface{} `yaml:"datadog_api_key,omitempty"`

	/*LogLevel - Descr: log level: debug, info, error or fatal Default: <nil>
*/
	LogLevel interface{} `yaml:"log_level,omitempty"`

	/*NumReps - Descr: the number of rep processes to simulate in test Default: <nil>
*/
	NumReps interface{} `yaml:"num_reps,omitempty"`

	/*ActiveKeyLabel - Descr: the active key for encryption Default: <nil>
*/
	ActiveKeyLabel interface{} `yaml:"active_key_label,omitempty"`

	/*DatadogMetricPrefix - Descr: the datadog metric prefix Default: 
*/
	DatadogMetricPrefix interface{} `yaml:"datadog_metric_prefix,omitempty"`

	/*LogFile - Descr: file name for benchmark log output in the BOSH log dir Default: <nil>
*/
	LogFile interface{} `yaml:"log_file,omitempty"`

	/*DatadogAppKey - Descr: the application key for datadog metrics Default: 
*/
	DatadogAppKey interface{} `yaml:"datadog_app_key,omitempty"`

	/*ClientTimeout - Descr: the http timeout for bbs client requests Default: <nil>
*/
	ClientTimeout interface{} `yaml:"client_timeout,omitempty"`

	/*Sql - Descr: Connection string to use for SQL backend [username:password@tcp(1.1.1.1:1234)/database] Default: <nil>
*/
	Sql *Sql `yaml:"sql,omitempty"`

}